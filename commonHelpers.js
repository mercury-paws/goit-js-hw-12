import{a as v,i as c,S as L}from"./assets/vendor-5401a4b0.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const r of e)if(r.type==="childList")for(const i of r.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&s(i)}).observe(document,{childList:!0,subtree:!0});function t(e){const r={};return e.integrity&&(r.integrity=e.integrity),e.referrerPolicy&&(r.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?r.credentials="include":e.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(e){if(e.ep)return;e.ep=!0;const r=t(e);fetch(e.href,r)}})();async function p(a,o,t){let s="https://pixabay.com/api/";const e=await v.get(s,{params:{key:"42490410-91d7fda5db61c0a899b50e1d9",q:a,per_page:t,page:o,orientation:"horizontal",safesearch:!0}});if(console.log(e.data.total),e.status!==200)throw new Error("Image error!");return(await e.data).hits}function f(a){const o=document.querySelector(".gallery"),t=a.map(({webformatURL:s,tags:e,likes:r,views:i,comments:y,downloads:b,largeImageURL:u})=>`<div class="pic-card">
          <a class="gallery-link" href="${u}">
            <img 
              src="${s}"
              data-source="${u}"
              alt="${e}" />
          </a>
          <div class="pic-info">
            <div class="info"><p class="label">Likes</p> <p class="info-label">${r}</p></div>
            <div class="info"><p class="label">Views</p> <p class="info-label">${i}</p></div>
            <div class="info"><p class="label">Comments</p> <p class="info-label">${y}</p></div>
            <div class="info"><p class="label">Downloads</p> <p class="info-label">${b}</p></div>
          </div>
        </div>`).join("");o.insertAdjacentHTML("beforeend",t)}const d=document.querySelector(".input-picstyle"),w=document.querySelector(".search-btn"),g=document.querySelector(".gallery"),l=document.querySelector(".loadmore-btn"),n=document.querySelector(".loader"),m=document.querySelector(".the-end");let h="";w.addEventListener("click",async()=>{let a=1;const o=15;g.innerHTML=null;const t=d.value.trim().split(" ").join("+");if(m.classList.add("is-hidden"),h=t,console.log(t),!t){c.error({color:"red",message:"Please fill in the querry, what are you looking for?",position:"center",progressBarColor:"rgb(0, 255, 184)",timeout:2e3});return}n.classList.remove("is-hidden");try{const s=await p(t,a,o);console.log(s),s.length===0?(g.innerHTML=null,l.classList.add("is-hidden"),c.error({color:"yellow",message:"Sorry, there are no images matching your search query. Please try again!",position:"center",progressBarColor:"rgb(0, 255, 184)",timeout:2e3})):(f(s),n.classList.add("is-hidden"),l.classList.remove("is-hidden"),s.length<=14&&(l.classList.add("is-hidden"),m.classList.remove("is-hidden")),new L(".pic-card a",{captionsData:"alt",captionDelay:250}).refresh())}catch(s){console.log("Error caught:",s.message),c.error({color:"red",message:"Error while fetching images",position:"center",progressBarColor:"rgb(0, 255, 184)",timeout:2e3})}finally{d.value="";let s=t.split("+").join(" ");d.placeholder=`Last searched for "${s}"`,l.addEventListener("click",async()=>{n.classList.remove("is-hidden");try{a++;let e=await p(h,a,o);n.classList.add("is-hidden"),f(e)}catch(e){console.error("Error while fetching images:",e.message)}})}});
//# sourceMappingURL=commonHelpers.js.map
