import{a as w,i as c,S as f}from"./assets/vendor-5401a4b0.js";(function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))a(e);new MutationObserver(e=>{for(const s of e)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&a(i)}).observe(document,{childList:!0,subtree:!0});function t(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?s.credentials="include":e.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(e){if(e.ep)return;e.ep=!0;const s=t(e);fetch(e.href,s)}})();async function m(o,r,t){let a="https://pixabay.com/api/";const e=await w.get(a,{params:{key:"42490410-91d7fda5db61c0a899b50e1d9",q:o,per_page:t,page:r,orientation:"horizontal",safesearch:!0}});if(console.log(e.data.total),e.status!==200)throw new Error("Image error!");return(await e.data).hits}function y(o){const r=document.querySelector(".gallery"),t=o.map(({webformatURL:a,tags:e,likes:s,views:i,comments:v,downloads:L,largeImageURL:u})=>`<div class="pic-card">
          <a class="gallery-link" href="${u}">
            <img 
              src="${a}"
              data-source="${u}"
              alt="${e}" />
          </a>
          <div class="pic-info">
            <div class="info"><p class="label">Likes</p> <p class="info-label">${s}</p></div>
            <div class="info"><p class="label">Views</p> <p class="info-label">${i}</p></div>
            <div class="info"><p class="label">Comments</p> <p class="info-label">${v}</p></div>
            <div class="info"><p class="label">Downloads</p> <p class="info-label">${L}</p></div>
          </div>
        </div>`).join("");r.insertAdjacentHTML("beforeend",t)}const d=document.querySelector(".input-picstyle"),S=document.querySelector(".search-btn"),g=document.querySelector(".gallery"),l=document.querySelector(".loadmore-btn"),n=document.querySelector(".loader"),h=document.querySelector(".the-end");let b="",p=1;const q=15;S.addEventListener("click",async()=>{g.innerHTML=null;const r=d.value.trim().split(" ").join("+");if(h.classList.add("is-hidden"),b=r,console.log(r),!r){c.error({color:"red",message:"Please fill in the querry, what are you looking for?",position:"center",progressBarColor:"rgb(0, 255, 184)",timeout:2e3});return}n.classList.remove("is-hidden");try{const t=await m(r,p,15);console.log(t),t.length===0?(g.innerHTML=null,l.classList.add("is-hidden"),c.error({color:"yellow",message:"Sorry, there are no images matching your search query. Please try again!",position:"center",progressBarColor:"rgb(0, 255, 184)",timeout:2e3})):(y(t),n.classList.add("is-hidden"),t.length<=14?(l.classList.add("is-hidden"),h.classList.remove("is-hidden")):l.classList.remove("is-hidden"),new f(".pic-card a",{captionsData:"alt",captionDelay:250}).refresh())}catch(t){console.log("Error caught:",t.message),c.error({color:"red",message:"Error while fetching images",position:"center",progressBarColor:"rgb(0, 255, 184)",timeout:2e3})}finally{d.value="";let t=r.split("+").join(" ");d.placeholder=`Last searched for "${t}"`}});l.addEventListener("click",async()=>{n.classList.remove("is-hidden");try{p++;let o=await m(b,p,q);n.classList.add("is-hidden"),y(o);let t=document.querySelector(".pic-card").getBoundingClientRect();new f(".pic-card a",{captionsData:"alt",captionDelay:250}).refresh(),window.scrollBy({top:2*t.height,behavior:"smooth"})}catch(o){console.error("Error while fetching images:",o.message)}});
//# sourceMappingURL=commonHelpers.js.map
